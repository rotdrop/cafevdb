<?php

namespace OCA\CAFEVDB\Database\Doctrine\ORM\Proxies\__CG__\OCA\CAFEVDB\Database\Doctrine\ORM\Entities;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class InstrumentInsurance extends \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\InstrumentInsurance implements \OCA\CAFEVDB\Wrapped\Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'id', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'instrumentHolder', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'billToParty', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'insuranceRate', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'object', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'accessory', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'manufacturer', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'yearOfConstruction', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'insuranceAmount', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'startOfInsurance', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'keys', 'deleted', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'created', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'updated'];
        }

        return ['__isInitialized__', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'id', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'instrumentHolder', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'billToParty', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'insuranceRate', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'object', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'accessory', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'manufacturer', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'yearOfConstruction', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'insuranceAmount', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'startOfInsurance', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'keys', 'deleted', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'created', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\InstrumentInsurance' . "\0" . 'updated'];
    }

    /**
     * {@inheritDoc}
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (InstrumentInsurance $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
        parent::__wakeup();
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\InstrumentInsurance
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstrumentHolder($instrumentHolder): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\InstrumentInsurance
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstrumentHolder', [$instrumentHolder]);

        return parent::setInstrumentHolder($instrumentHolder);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstrumentHolder(): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\Musician
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstrumentHolder', []);

        return parent::getInstrumentHolder();
    }

    /**
     * {@inheritDoc}
     */
    public function getBroker(): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\InsuranceBroker
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBroker', []);

        return parent::getBroker();
    }

    /**
     * {@inheritDoc}
     */
    public function getGeographicalScope(): \OCA\CAFEVDB\Database\Doctrine\DBAL\Types\EnumGeographicalScope
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeographicalScope', []);

        return parent::getGeographicalScope();
    }

    /**
     * {@inheritDoc}
     */
    public function setObject($object): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\InstrumentInsurance
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObject', [$object]);

        return parent::setObject($object);
    }

    /**
     * {@inheritDoc}
     */
    public function getObject(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObject', []);

        return parent::getObject();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccessory($accessory): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\InstrumentInsurance
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccessory', [$accessory]);

        return parent::setAccessory($accessory);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessory(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessory', []);

        return parent::getAccessory();
    }

    /**
     * {@inheritDoc}
     */
    public function setManufacturer($manufacturer): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\InstrumentInsurance
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManufacturer', [$manufacturer]);

        return parent::setManufacturer($manufacturer);
    }

    /**
     * {@inheritDoc}
     */
    public function getManufacturer(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getManufacturer', []);

        return parent::getManufacturer();
    }

    /**
     * {@inheritDoc}
     */
    public function setYearOfConstruction($yearOfConstruction): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\InstrumentInsurance
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYearOfConstruction', [$yearOfConstruction]);

        return parent::setYearOfConstruction($yearOfConstruction);
    }

    /**
     * {@inheritDoc}
     */
    public function getYearOfConstruction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYearOfConstruction', []);

        return parent::getYearOfConstruction();
    }

    /**
     * {@inheritDoc}
     */
    public function setInsuranceAmount($insuranceAmount): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\InstrumentInsurance
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInsuranceAmount', [$insuranceAmount]);

        return parent::setInsuranceAmount($insuranceAmount);
    }

    /**
     * {@inheritDoc}
     */
    public function getInsuranceAmount(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInsuranceAmount', []);

        return parent::getInsuranceAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setBillToParty($billToParty): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\InstrumentInsurance
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBillToParty', [$billToParty]);

        return parent::setBillToParty($billToParty);
    }

    /**
     * {@inheritDoc}
     */
    public function getBillToParty(): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\Musician
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBillToParty', []);

        return parent::getBillToParty();
    }

    /**
     * {@inheritDoc}
     */
    public function ensureBillToParty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'ensureBillToParty', []);

        return parent::ensureBillToParty();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartOfInsurance($startOfInsurance): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\InstrumentInsurance
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartOfInsurance', [$startOfInsurance]);

        return parent::setStartOfInsurance($startOfInsurance);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartOfInsurance(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartOfInsurance', []);

        return parent::getStartOfInsurance();
    }

    /**
     * {@inheritDoc}
     */
    public function setInsuranceRate(\OCA\CAFEVDB\Database\Doctrine\ORM\Entities\InsuranceRate $insuranceRate): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\InstrumentInsurance
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInsuranceRate', [$insuranceRate]);

        return parent::setInsuranceRate($insuranceRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getInsuranceRate(): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\InsuranceRate
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInsuranceRate', []);

        return parent::getInsuranceRate();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function offsetExists($offset): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetExists', [$offset]);

        return parent::offsetExists($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetGet($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetGet', [$offset]);

        return parent::offsetGet($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetSet($offset, $value): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetSet', [$offset, $value]);

        parent::offsetSet($offset, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetUnset($offset): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetUnset', [$offset]);

        parent::offsetUnset($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted($deleted = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', [$deleted]);

        return parent::setDeleted($deleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeleted', []);

        return parent::getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleted', []);

        return parent::isDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated($updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', [$updated]);

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', []);

        return parent::getUpdated();
    }

}
