<?php

namespace OCA\CAFEVDB\Database\Doctrine\ORM\Proxies\__CG__\OCA\CAFEVDB\Database\Doctrine\ORM\Entities;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ProjectParticipant extends \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\ProjectParticipant implements \OCA\CAFEVDB\Wrapped\Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'project', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'musician', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'registration', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'payments', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'participantFieldsData', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'projectInstruments', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'databaseDocuments', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'preUpdateValue', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'keys', 'created', 'updated', 'deleted'];
        }

        return ['__isInitialized__', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'project', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'musician', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'registration', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'payments', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'participantFieldsData', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'projectInstruments', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'databaseDocuments', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'preUpdateValue', '' . "\0" . 'OCA\\CAFEVDB\\Database\\Doctrine\\ORM\\Entities\\ProjectParticipant' . "\0" . 'keys', 'created', 'updated', 'deleted'];
    }

    /**
     * {@inheritDoc}
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ProjectParticipant $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
        parent::__wakeup();
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setProject($project): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\ProjectParticipant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProject', [$project]);

        return parent::setProject($project);
    }

    /**
     * {@inheritDoc}
     */
    public function getProject(): ?\OCA\CAFEVDB\Database\Doctrine\ORM\Entities\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProject', []);

        return parent::getProject();
    }

    /**
     * {@inheritDoc}
     */
    public function setMusician($musician): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\ProjectParticipant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMusician', [$musician]);

        return parent::setMusician($musician);
    }

    /**
     * {@inheritDoc}
     */
    public function getMusician(): ?\OCA\CAFEVDB\Database\Doctrine\ORM\Entities\Musician
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMusician', []);

        return parent::getMusician();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistration(?bool $registration): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\ProjectParticipant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistration', [$registration]);

        return parent::setRegistration($registration);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistration', []);

        return parent::getRegistration();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectInstruments(\OCA\CAFEVDB\Wrapped\Doctrine\Common\Collections\Collection $projectInstruments): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\ProjectParticipant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectInstruments', [$projectInstruments]);

        return parent::setProjectInstruments($projectInstruments);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectInstruments(): \OCA\CAFEVDB\Wrapped\Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectInstruments', []);

        return parent::getProjectInstruments();
    }

    /**
     * {@inheritDoc}
     */
    public function setParticipantFieldsData(\OCA\CAFEVDB\Wrapped\Doctrine\Common\Collections\Collection $participantFieldsData): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\ProjectParticipant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParticipantFieldsData', [$participantFieldsData]);

        return parent::setParticipantFieldsData($participantFieldsData);
    }

    /**
     * {@inheritDoc}
     */
    public function getParticipantFieldsData(): \OCA\CAFEVDB\Wrapped\Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParticipantFieldsData', []);

        return parent::getParticipantFieldsData();
    }

    /**
     * {@inheritDoc}
     */
    public function getParticipantFieldsDatum(mixed $key): ?\OCA\CAFEVDB\Database\Doctrine\ORM\Entities\ProjectParticipantFieldDatum
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParticipantFieldsDatum', [$key]);

        return parent::getParticipantFieldsDatum($key);
    }

    /**
     * {@inheritDoc}
     */
    public function setPayments(\OCA\CAFEVDB\Wrapped\Doctrine\Common\Collections\Collection $payments): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\ProjectParticipant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPayments', [$payments]);

        return parent::setPayments($payments);
    }

    /**
     * {@inheritDoc}
     */
    public function getPayments(): \OCA\CAFEVDB\Wrapped\Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayments', []);

        return parent::getPayments();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatabaseDocuments(?\OCA\CAFEVDB\Database\Doctrine\ORM\Entities\DatabaseStorage $databaseDocuments): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\ProjectParticipant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatabaseDocuments', [$databaseDocuments]);

        return parent::setDatabaseDocuments($databaseDocuments);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatabaseDocuments(): ?\OCA\CAFEVDB\Database\Doctrine\ORM\Entities\DatabaseStorage
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatabaseDocuments', []);

        return parent::getDatabaseDocuments();
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicName(bool $firstNameFirst = false): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicName', [$firstNameFirst]);

        return parent::getPublicName($firstNameFirst);
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate(\OCA\CAFEVDB\Wrapped\Doctrine\ORM\Event\PreUpdateEventArgs $event)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', [$event]);

        return parent::preUpdate($event);
    }

    /**
     * {@inheritDoc}
     */
    public function postUpdate(\OCA\CAFEVDB\Wrapped\Doctrine\ORM\Event\LifecycleEventArgs $event)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'postUpdate', [$event]);

        return parent::postUpdate($event);
    }

    /**
     * {@inheritDoc}
     */
    public function usage(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'usage', []);

        return parent::usage();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function offsetExists(mixed $offset): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetExists', [$offset]);

        return parent::offsetExists($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetGet(mixed $offset): mixed
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetGet', [$offset]);

        return parent::offsetGet($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetSet(mixed $offset, mixed $value): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetSet', [$offset, $value]);

        parent::offsetSet($offset, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetUnset(mixed $offset): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetUnset', [$offset]);

        parent::offsetUnset($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated($updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', [$updated]);

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', []);

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted(mixed $deleted = NULL): \OCA\CAFEVDB\Database\Doctrine\ORM\Entities\ProjectParticipant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', [$deleted]);

        return parent::setDeleted($deleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeleted', []);

        return parent::getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleted(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleted', []);

        return parent::isDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function isExpired(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isExpired', []);

        return parent::isExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function unused(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unused', []);

        return parent::unused();
    }

    /**
     * {@inheritDoc}
     */
    public function inUse(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'inUse', []);

        return parent::inUse();
    }

}
