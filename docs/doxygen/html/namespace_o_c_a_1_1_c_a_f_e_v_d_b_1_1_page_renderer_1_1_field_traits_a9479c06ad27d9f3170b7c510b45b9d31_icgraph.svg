<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 9.0.0 (20230911.1827)
 -->
<!-- Title: allowedOptionLabel Pages: 1 -->
<svg width="109pt" height="46pt"
 viewBox="0.00 0.00 108.75 46.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.node, .edge {opacity: 0.7;}
.node.selected, .edge.selected {opacity: 1;}
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="application/ecmascript" xlink:href="svg.min.js"/>
<svg id="graph" class="graph">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 42)">
<title>allowedOptionLabel</title>
<!-- Node1 -->
<g id="Node000001" class="node">
<title>Node1</title>
<g id="a_Node000001"><a xlink:title="Create a label for a multi&#45;value option (multiple, parallel, recurring).">
<polygon fill="#999999" stroke="#666666" points="100.75,-20 0,-20 0,0 100.75,0 100.75,-20"/>
<text text-anchor="middle" x="50.38" y="-6.5" font-family="Helvetica,sans-Serif" font-size="10.00">allowedOptionLabel</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node1 -->
<g id="edge1_Node000001_Node000001" class="edge">
<title>Node1&#45;&gt;Node1</title>
<g id="a_edge1_Node000001_Node000001"><a xlink:title=" ">
<path fill="none" stroke="#63b8ff" d="M68.18,-31.44C65.89,-35.3 59.95,-38 50.38,-38 32.86,-38 27.53,-28.98 34.37,-20.34"/>
<polygon fill="#63b8ff" stroke="#63b8ff" points="71.68,-31.14 66.63,-21.83 64.77,-32.26 71.68,-31.14"/>
</a>
</g>
</g>
</g>
</svg>
</svg>

<style type='text/css'>
<![CDATA[
[data-mouse-over-selected='false'] { opacity: 0.7; }
[data-mouse-over-selected='true']  { opacity: 1.0; }
]]>
</style>
<script type="application/ecmascript"><![CDATA[
document.addEventListener('DOMContentLoaded', (event) => {
  highlightEdges();
  highlightAdjacentNodes();
});
]]></script>
</svg>
