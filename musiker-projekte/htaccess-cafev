RewriteEngine On
RewriteCond %{REMOTE_ADDR} !^10\.9\.0\.(8|9|10)$
RewriteRule ^ https://ssl.webpack.de/%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
#SSLRequireSSL doesn't work, because auth comes before redirect
Options -Indexes
<Files "*~">
  Order deny,allow
  Deny from all
</Files>
<Files "#*">
  Order deny,allow
  Deny from all
</Files>

# Make sure we do not get a double login and the password are not
# transferred in clear text. It works like follows:
#
# Allow/Deny grant access based on host names or -- as in this case --
# environment variables. "Satisfy Any" tells the server that either
# Allow/Deny grants access or the password based lookup.
#
# The following happens then:
#
# 1. The users enters the non-SSL URL in his/her browser:
#
# http://www.example.eu/musiker-projekte
#
# 2. The web-server first scans all .htaccess files for
# authentication, BEFORE the Rewrite-rules at the top of this file are
# executed. At this stage Remote_Addr is the IP of our non-SSL
# web-server, and AskForPassword is not set, so the "Allow From" rule
# grants access, together with "Satisfy Any" grants access.
#
# 3. The rewrite rule is executed and we are redirected to the
# SSL-protected server. AskForPassword becomes set, and so the "Allow
# From" no longer grants access (the exclamation sign is a negation,
# as usual).
#
# 4. "Satsify Any" forces the server to prompt for a password. This
# time the password crosses the network with SSL encryption.

SetEnvIf Remote_Addr "^10\.9\.0\.(8|9|10)" AskForPassword
Order Deny,Allow
Deny from all
Allow from env=!AskForPassword
Satisfy Any

AuthName "Our Ensemble e.V.."
AuthType Basic
AuthUserFile "/is/htdocs/wp1173590_IDUP6S1903//htpasswd.cafev"
Require valid-user
